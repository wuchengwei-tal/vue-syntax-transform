// Vitest Snapshot v1

exports[`sfc ref transform > $ unwrapping 1`] = `
"import { ref, shallowRef } from 'vue'
      
export default {
  setup(__props, { expose }) {

      let foo = (ref())
      let a = (ref(1))
      let b = (shallowRef({
        count: 0
      }))
      let c = () => {}
      let d
      
return { foo, a, b, get c() { return c }, set c(v) { c = v }, get d() { return d }, set d(v) { d = v }, ref, shallowRef }
}

}"
`;

exports[`sfc ref transform > $ref & $shallowRef declarations 1`] = `
"export default {
  setup(__props, { expose }) {

      let foo = ref()
      let a = ref(1)
      let b = shallowRef({
        count: 0
      })
      let c = () => {}
      let d
      
return { foo, a, b, get c() { return c }, set c(v) { c = v }, get d() { return d }, set d(v) { d = v } }
}

}"
`;

exports[`sfc ref transform > usage /w typescript 1`] = `
"export default /*#__PURE__*/_defineComponent({
  setup(__props, { expose }) {

          let msg = ref<string | number>('foo');
          let bar = ref <string | number>('bar');
        
return { msg, bar }
}

})"
`;

exports[`sfc ref transform > usage in normal <script> 1`] = `
"
      export default {
        setup() {
          let count = ref(0)
          const inc = () => count.value++
          return ({ count })
        }
      }
      "
`;

exports[`sfc ref transform > usage with normal <script> (has macro usage) + <script setup> (no macro usage) 1`] = `
"let data = ref()
      
export default {
  setup(__props, { expose }) {

      console.log(data.value)
      
return { data }
}

}"
`;

exports[`sfc ref transform > usage with normal <script> + <script setup> 1`] = `
"let a = ref(0)
      let c = ref(0)
      
export default {
  setup(__props, { expose }) {

      let b = ref(0)
      let c = 0
      function change() {
        a.value++
        b.value++
        c++
      }
      
return { a, c, b, change }
}

}"
`;
