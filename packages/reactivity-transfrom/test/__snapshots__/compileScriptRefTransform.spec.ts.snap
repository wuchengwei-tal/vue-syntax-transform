// Vitest Snapshot v1

exports[`sfc ref transform > $ unwrapping 1`] = `
"import { ref, shallowRef } from 'vue'
      
      let foo = (ref())
      let a = (ref(1))
      let b = (shallowRef({
        count: 0
      }))
      let c = () => {}
      let d"
`;

exports[`sfc ref transform > $ref & $shallowRef declarations 1`] = `
"let foo = ref()
      let a = ref(1)
      let b = shallowRef({
        count: 0
      })
      let c = () => {}
      let d"
`;

exports[`sfc ref transform > usage /w typescript 1`] = `
"let msg = ref<string | number>('foo');
          let bar = ref <string | number>('bar');"
`;

exports[`sfc ref transform > usage in normal <script> 1`] = `
"
      export default {
        setup() {
          let count = ref(0)
          const inc = () => count.value++
          return ({ count })
        }
      }
      "
`;

exports[`sfc ref transform > usage with normal <script> (has macro usage) + <script setup> (no macro usage) 1`] = `
"let data = ref()
      
      console.log(data.value)"
`;
