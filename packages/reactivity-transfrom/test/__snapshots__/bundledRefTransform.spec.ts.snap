// Vitest Snapshot v1

exports[`sfc ref transform > $ unwrapping 1`] = `
"<script setup>
      import { ref, shallowRef } from 'vue'
      const foo = (ref())
      const a = (ref(1))
      const b = (shallowRef({
        count: 0
      }))
      let c = () => {}
      let d
      const e = (computed(()=>a.value))
      </script>"
`;

exports[`sfc ref transform > $ref & $shallowRef declarations 1`] = `
"<script setup>
      const foo = ref()
      const a = ref(1)
      const b = shallowRef({
        count: 0
      })
      let c = () => {}
      let d
      const e = (computed(()=>a.value))
      </script>"
`;

exports[`sfc ref transform > usage /w typescript 1`] = `
"<script setup lang=\\"ts\\">
          const msg = ref<string | number>('foo');
          const bar = ref <string | number>('bar');
        </script>"
`;

exports[`sfc ref transform > usage in normal <script> 1`] = `
"<script>
      export default {
        setup() {
          const count = ref(0)
          const inc = () => count.value++
          return ({ count })
        }
      }
      </script>"
`;

exports[`sfc ref transform > usage with normal <script> (has macro usage) + <script setup> (no macro usage) 1`] = `
"<script>
      const data = ref()
      </script>
      <script setup>
      console.log(data.value)
      </script>"
`;
